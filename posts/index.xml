<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on trib0r3&#39;s blog</title>
        <link>/posts/</link>
        <description>Recent content in Posts on trib0r3&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sun, 12 Jan 2020 21:06:10 +0100</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Disable Aslr</title>
            <link>/posts/disable-aslr/</link>
            <pubDate>Sun, 12 Jan 2020 21:06:10 +0100</pubDate>
            
            <guid>/posts/disable-aslr/</guid>
            <description>Linux echo 0 | sudo tee /proc/sys/kernel/randomize_va_space radare2 # disable ASLR &amp;amp; reanalyse dor aslr=no aaa Windows Windows 7  Open RegEdit Goto: HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\ Create new value (not a key): MoveImages with value 0. Reboot.  Windows 10 Disable ASLR per file Set-Processmitigation -Name name.exe -Disable ForceRelocateImages Disable ASLR by default  Search in Windows for: “windows defender Security Center” Click on the second icon from the bottom: “App &amp;amp; browser control” Scroll to the bottom and click on: “Exploit protection settings” Set “Force randomization for images “ to OFF.</description>
            <content type="html"><![CDATA[<h2 id="linux">Linux</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">echo <span style="color:#ae81ff">0</span> | sudo tee /proc/sys/kernel/randomize_va_space
</code></pre></div><h3 id="radare2">radare2</h3>
<pre><code class="language-r2" data-lang="r2"># disable ASLR &amp; reanalyse
dor aslr=no
aaa
</code></pre><h2 id="windows">Windows</h2>
<h3 id="windows-7">Windows 7</h3>
<ol>
<li>Open <code>RegEdit</code></li>
<li>Goto: <code>HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\</code></li>
<li>Create new <em>value</em> (not a key): <code>MoveImages</code> with value <code>0</code>.</li>
<li>Reboot.</li>
</ol>
<h3 id="windows-10">Windows 10</h3>
<h4 id="disable-aslr-per-file">Disable ASLR per file</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">Set-Processmitigation -Name name.exe -Disable ForceRelocateImages
</code></pre></div><h4 id="disable-aslr-by-default">Disable ASLR by default</h4>
<ol>
<li>Search in Windows for: “windows defender Security Center”</li>
<li>Click on the second icon from the bottom: “App &amp; browser control”</li>
<li>Scroll to the bottom and click on: “Exploit protection settings”</li>
<li>Set “Force randomization for images “ to <em>OFF</em>.</li>
<li>Reboot</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://oalabs.openanalysis.net/2019/06/12/disable-aslr-for-easier-malware-debugging/">Disable ASLR for Easier Malware Debugging With x64dbg and IDA Pro</a></li>
<li><a href="https://gist.github.com/trietptm/b84ccad9db01f459ac7e">Gist</a></li>
<li><a href="https://www.reddit.com/r/ReverseEngineering/comments/bzn06z/disable_aslr_for_easier_malware_debugging_with/">Disable ASLR For Easier Malware Debugging With x64dbg and IDA Pro (OALabs Quick Tip) : ReverseEngineering</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>C&#43;&#43; assembly</title>
            <link>/posts/c&#43;&#43;-assembly/</link>
            <pubDate>Sat, 11 Jan 2020 14:50:06 +0100</pubDate>
            
            <guid>/posts/c&#43;&#43;-assembly/</guid>
            <description>Structures C struct vs C++ class C struct  functions are loosely correlated with paramaters, parameters are usually passed via pointer, it may look like array for struct with 2 identical parameters in struct, for structures created dynamically look for malloc with non-usual size.  C++ class  Find constructor, it have always 1 argument (this pointer -&amp;gt; thiscall), main() function have initialization function __main with ctor initlizers, after creation of class with new operator the class constructor is called (can be empty), Methods are called with thiscall convention.</description>
            <content type="html"><![CDATA[<h2 id="structures">Structures</h2>
<h3 id="c-struct-vs-c-class">C struct vs C++ class</h3>
<h4 id="c-struct">C struct</h4>
<ul>
<li>functions are loosely correlated with paramaters,</li>
<li>parameters are usually passed via pointer,</li>
<li>it may look like array for struct with 2 identical parameters in struct,</li>
<li>for structures created dynamically look for <code>malloc</code> with non-usual size.</li>
</ul>
<h4 id="c-class">C++ class</h4>
<ul>
<li>Find constructor, it have always 1 argument (<code>this</code> pointer -&gt; <code>thiscall</code>),</li>
<li><code>main()</code> function have initialization function <code>__main</code> with ctor initlizers,</li>
<li>after creation of class with <code>new</code> operator the class constructor is called (can be empty),</li>
<li>Methods are called with <code>thiscall</code> convention.</li>
</ul>
<h3 id="inheritance">Inheritance</h3>
<p>Constructors of base class are called 1st in child class, additionally assigment to variables in class definition is put inside constructor:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c++" data-lang="c++"><span style="color:#66d9ef">void</span> __thiscall <span style="color:#a6e22e">Inherited</span>(Inherited <span style="color:#f92672">*</span><span style="color:#66d9ef">this</span>)
{
  Box((Box <span style="color:#f92672">*</span>)<span style="color:#66d9ef">this</span>);
  <span style="color:#66d9ef">this</span><span style="color:#f92672">-</span><span style="color:#f92672">&gt;</span>c <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>; <span style="color:#75715e">// this was assigned in class definition, not constructor
</span><span style="color:#75715e"></span>  <span style="color:#66d9ef">this</span><span style="color:#f92672">-</span><span style="color:#f92672">&gt;</span>b <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>;
  <span style="color:#66d9ef">this</span><span style="color:#f92672">-</span><span style="color:#f92672">&gt;</span>a <span style="color:#f92672">=</span> <span style="color:#66d9ef">this</span><span style="color:#f92672">-</span><span style="color:#f92672">&gt;</span>b;
  <span style="color:#66d9ef">return</span>;
}

</code></pre></div><p>Inherited destructors contains destructors of base class:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c++" data-lang="c++"><span style="color:#66d9ef">void</span> __thiscall <span style="color:#f92672">~</span>Inherited(Inherited <span style="color:#f92672">*</span><span style="color:#66d9ef">this</span>)

{
  <span style="color:#f92672">~</span>Box((Box <span style="color:#f92672">*</span>)<span style="color:#66d9ef">this</span>);
  <span style="color:#66d9ef">return</span>;
}
</code></pre></div><h3 id="virtuals">Virtuals</h3>
<p>Generally we have the same behaviour like in inheritance, but additionally we have also vtables.</p>
<p>The structures of classess contains 1 additional field (at offset 0): <code>vptr</code> to <code>vtable</code> structure containing pointers to all virtual methods in this class:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c++" data-lang="c++"><span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">vtable_class_A</span> {
  <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span> <span style="color:#a6e22e">virtual_func_1</span>();
  <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span> <span style="color:#a6e22e">virtual_func_2</span>();
  <span style="color:#75715e">// ...
</span><span style="color:#75715e"></span>};
</code></pre></div><h2 id="references">References</h2>
<ol>
<li><a href="https://oalabs.openanalysis.net/2019/06/03/reverse-engineering-c-with-ida-pro-classes-constructors-and-structs/">OA Labs</a></li>
</ol>
]]></content>
        </item>
        
    </channel>
</rss>
