<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on trib0r3&#39;s blog</title>
        <link>/posts/</link>
        <description>Recent content in Posts on trib0r3&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 18 Jan 2020 14:00:15 +0100</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Disable Aslr</title>
            <link>/posts/disable-aslr/</link>
            <pubDate>Sat, 18 Jan 2020 14:00:15 +0100</pubDate>
            
            <guid>/posts/disable-aslr/</guid>
            <description>Linux echo 0 | sudo tee /proc/sys/kernel/randomize_va_space radare2 # disable ASLR &amp;amp; reanalyse dor aslr=no aaa Windows Windows 7  Open RegEdit Goto: HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\ Create new value (not a key): MoveImages with value 0. Reboot.  Windows 10 Disable ASLR per file Set-Processmitigation -Name name.exe -Disable ForceRelocateImages Disable ASLR by default  Search in Windows for: “windows defender Security Center” Click on the second icon from the bottom: “App &amp;amp; browser control” Scroll to the bottom and click on: “Exploit protection settings” Set “Force randomization for images “ to OFF.</description>
            <content type="html"><![CDATA[<h2 id="linux">Linux</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">echo <span style="color:#ae81ff">0</span> | sudo tee /proc/sys/kernel/randomize_va_space
</code></pre></div><h3 id="radare2">radare2</h3>
<pre><code class="language-r2" data-lang="r2"># disable ASLR &amp; reanalyse
dor aslr=no
aaa
</code></pre><h2 id="windows">Windows</h2>
<h3 id="windows-7">Windows 7</h3>
<ol>
<li>Open <code>RegEdit</code></li>
<li>Goto: <code>HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\</code></li>
<li>Create new <em>value</em> (not a key): <code>MoveImages</code> with value <code>0</code>.</li>
<li>Reboot.</li>
</ol>
<h3 id="windows-10">Windows 10</h3>
<h4 id="disable-aslr-per-file">Disable ASLR per file</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">Set-Processmitigation -Name name.exe -Disable ForceRelocateImages
</code></pre></div><h4 id="disable-aslr-by-default">Disable ASLR by default</h4>
<ol>
<li>Search in Windows for: “windows defender Security Center”</li>
<li>Click on the second icon from the bottom: “App &amp; browser control”</li>
<li>Scroll to the bottom and click on: “Exploit protection settings”</li>
<li>Set “Force randomization for images “ to <em>OFF</em>.</li>
<li>Reboot</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://oalabs.openanalysis.net/2019/06/12/disable-aslr-for-easier-malware-debugging/">Disable ASLR for Easier Malware Debugging With x64dbg and IDA Pro</a></li>
<li><a href="https://gist.github.com/trietptm/b84ccad9db01f459ac7e">Gist</a></li>
<li><a href="https://www.reddit.com/r/ReverseEngineering/comments/bzn06z/disable_aslr_for_easier_malware_debugging_with/">Disable ASLR For Easier Malware Debugging With x64dbg and IDA Pro (OALabs Quick Tip) : ReverseEngineering</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Keep Your Notes Organized (bear2mdtree demo)</title>
            <link>/posts/keep-your-md-notes-organized/</link>
            <pubDate>Sat, 18 Jan 2020 09:00:00 +0100</pubDate>
            
            <guid>/posts/keep-your-md-notes-organized/</guid>
            <description>Journey of finding ideal note-taking app  TL;DR: If you want to transfer your bear notes to markdown goto Move your bear notes, if you want to emulate Bear multi-tagging check Multitagging support.
 Once upon a time I was using Bear.app for writing and organizing notes. It had really good features like multi-tagging and couple of other nice features like pseudo markdown support. Unfortunatelly a lot of things were bugged, developers slow in fixing them so I decided to move my notes from Bear to other platform.</description>
            <content type="html"><![CDATA[<h2 id="journey-of-finding-ideal-note-taking-app">Journey of finding ideal note-taking app</h2>
<blockquote>
<p>TL;DR: If you want to transfer your bear notes to markdown goto <a href="#Moving-bear-notes">Move your bear notes</a>, if you want to emulate <em>Bear</em> multi-tagging check <a href="#multitagging-support">Multitagging support</a>.</p>
</blockquote>
<p>Once upon a time I was using <a href="https://bear.app">Bear.app</a> for writing and organizing notes. It had really good features like multi-tagging and couple of other nice features like pseudo markdown support. Unfortunatelly a lot of things were bugged, developers slow in fixing them so I decided to move my notes from <em>Bear</em> to other platform.</p>
<h3 id="requirements">Requirements</h3>
<p>I wanted to have these features:</p>
<ul>
<li>WYSWIG (What You See Is What You Get) editor with only 1 pane,</li>
<li>Notes should be kept / written in Markdown,</li>
<li>Support image pasting from clipboard,</li>
<li>Sync,</li>
<li>Support for nested tags(1),</li>
<li>Support for multi-tagging(2).</li>
</ul>
<h4 id="1-nested-tags">(1) Nested tags</h4>
<p>We can have tree-like tags, i.e notes assigned to: <code>tag1/sub1</code>, will be also visible in <code>tag1</code>, but not in <code>tag2/sub1</code> (defferent parent).</p>
<h4 id="2-multi-tagging">(2) Multi-tagging</h4>
<p>Notes can belong to multiple tags, so they should be visible from multiple tag sub-trees.</p>
<h2 id="ideal-doesnt-exists-but">Ideal doesn't exists, but&hellip;</h2>
<p>Finally I couldn't find ideal substitute for <em>Bear</em>, so I decided to move into some WYSWIG Markdown editor which will nicely present meta-data for multi-tagging - I will take care about the rest of mine requirements.</p>
<p>I decided to move to <a href="https://typora.io/">Typora</a> - it is not perfect, but it seems to work fine. Moving to editor based on directory tree (folders = tags) have one big disadvantage - we can't have multiple tags (but nested tags are working nicely). I had idea how to overcome this issue.</p>
<h3 id="prerequirements">Prerequirements</h3>
<ol>
<li>Clone my repo <a href="https://github.com/trib0r3/bear2markdowntree">bear2markdowntree</a>.</li>
<li>Follow step (1) and (2) from <em>How to</em> section.</li>
</ol>
<h3 id="move-your-bear-notes">Move your bear notes</h3>
<p>First of all I created a concept of &ldquo;main tag&rdquo;, so if note have multiple tags (i.e <code>tag1/sub1</code> and <code>tag2/sub2</code>) we have to choose which tag is more important to us. The <em>main tag</em> will be actually translated into directory structure in your notes directory and saved there! The rest of the tags will be added into note as YAML meta-data.</p>
<p>For example: you have exported <em>bear</em> note to <code>$BEAR_DIR/note.md</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-markdown" data-lang="markdown"># Note

My note

#tag1/sub1 #tag2/sub2
</code></pre></div><p>After exporting this note with my script and selecting <code>#tag1/sub1</code> as main tag, the note will be saved under <code>$NOTES_DIR/tag1/sub1/note.md</code> and it will look like this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-markdown" data-lang="markdown">---
tags: [&#34;tag1/sub1&#34;, &#34;tag2/sub2&#34;]
---
# Note

My note
</code></pre></div><h4 id="demo">Demo</h4>
<p>Before running <code>export-bear2typora.py</code> don't forget setup script by editing it:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e"># config dirs</span>
NOTE_DIR <span style="color:#f92672">=</span> <span style="color:#e6db74"></span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">Notes/</span><span style="color:#e6db74">&#34;</span>         <span style="color:#75715e"># output dir</span>
BEAR_DIR <span style="color:#f92672">=</span> <span style="color:#e6db74"></span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">BearNotes/</span><span style="color:#e6db74">&#34;</span>     <span style="color:#75715e"># input dir</span>
</code></pre></div><p>Paths are relative to script path, during script execution you can be prompted for tag selection. During this you can also jump into python interactive session and fix tag name if something was wrongly matched (minimum knowledge of python is required) - tags are kept in <code>tags</code> array.</p>
<p>After this process you should have exported and fixed notes in your <code>BEAR_DIR</code>.</p>
<h3 id="multitagging-support">Multitagging support</h3>
<p>This topic is actually nicely described in <a href="https://github.com/trib0r3/bear2markdowntree#multi-tagging-support">README</a>. We can emulate multi-tags structure by symbolic links (but with some problems on Windows and in Typora) or by creating special file which I called <em>index</em>.</p>
<p>This file should be (re)generated with <code>build-tags.py</code> each time you decide to put some new file in your directory list.</p>
<p>Here you should edit only one variable (if you have <code>NOTES_DIR</code> relative to home directory):</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">HOME_USER <span style="color:#f92672">=</span> str(Path<span style="color:#f92672">.</span>home())
NOTES_DIR <span style="color:#f92672">=</span> HOME_USER <span style="color:#f92672">+</span> <span style="color:#e6db74"></span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">/Dropbox/Notes/</span><span style="color:#e6db74">&#34;</span> <span style="color:#75715e"># FIXME:  add path to your Notes folder (relative to $HOME)</span>
</code></pre></div><p>If you want to use absoulte path change code to:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">NOTES_DIR <span style="color:#f92672">=</span> <span style="color:#e6db74"></span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">/root/home/notes/</span><span style="color:#e6db74">&#34;</span>
</code></pre></div><p>Additionally if you don't want to see some tags, you can add them here:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e"># If you want ignore some tags in the final listing add them to this list</span>
<span style="color:#75715e"># WARNING: this feature is actually taking only subtag, </span>
<span style="color:#75715e">#  Ex#1: you have note with tag: &#34;dev/python/code-snippets&#34;</span>
<span style="color:#75715e">#    if you decide to ignore tag &#34;dev&#34;, then all subtags (&#34;python&#34;, &#34;code-snippets&#34;)  will be also ignored!</span>
<span style="color:#75715e">#  Ex#2: you have 2 notes with tags: note1: &#39;q/w/e&#39;, &#39;e/w/q&#39; (you have the same subtab &#39;w&#39;, but in totally different subtrees)</span>
<span style="color:#75715e">#    Ignoring tag &#39;w&#39; will affect BOTH subtrees, </span>
<span style="color:#75715e">#    It isn&#39;t possible to ignore subtag only from specified tree! Ignoring &#34;q/w&#34; will not work!</span>
IGNORE_TAGS <span style="color:#f92672">=</span> [] <span style="color:#75715e"># FIXME</span>
</code></pre></div><p>After running this script you should have <code>index.md</code> file generated in your <code>NOTES_DIR</code>.</p>
<h3 id="sync">Sync</h3>
<p>This is the simplest step, just create <a href="https://www.dropbox.com/">Dropbox</a> account, put your notes there and sync your notes across all devices!</p>
]]></content>
        </item>
        
        <item>
            <title>C&#43;&#43; assembly</title>
            <link>/posts/c&#43;&#43;-assembly/</link>
            <pubDate>Sat, 11 Jan 2020 14:50:06 +0100</pubDate>
            
            <guid>/posts/c&#43;&#43;-assembly/</guid>
            <description>Structures C struct vs C++ class C struct  functions are loosely correlated with paramaters, parameters are usually passed via pointer, it may look like array for struct with 2 identical parameters in struct, for structures created dynamically look for malloc with non-usual size.  C++ class  Find constructor, it have always 1 argument (this pointer -&amp;gt; thiscall), main() function have initialization function __main with ctor initlizers, after creation of class with new operator the class constructor is called (can be empty), Methods are called with thiscall convention.</description>
            <content type="html"><![CDATA[<h2 id="structures">Structures</h2>
<h3 id="c-struct-vs-c-class">C struct vs C++ class</h3>
<h4 id="c-struct">C struct</h4>
<ul>
<li>functions are loosely correlated with paramaters,</li>
<li>parameters are usually passed via pointer,</li>
<li>it may look like array for struct with 2 identical parameters in struct,</li>
<li>for structures created dynamically look for <code>malloc</code> with non-usual size.</li>
</ul>
<h4 id="c-class">C++ class</h4>
<ul>
<li>Find constructor, it have always 1 argument (<code>this</code> pointer -&gt; <code>thiscall</code>),</li>
<li><code>main()</code> function have initialization function <code>__main</code> with ctor initlizers,</li>
<li>after creation of class with <code>new</code> operator the class constructor is called (can be empty),</li>
<li>Methods are called with <code>thiscall</code> convention.</li>
</ul>
<h3 id="inheritance">Inheritance</h3>
<p>Constructors of base class are called 1st in child class, additionally assigment to variables in class definition is put inside constructor:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c++" data-lang="c++"><span style="color:#66d9ef">void</span> __thiscall <span style="color:#a6e22e">Inherited</span>(Inherited <span style="color:#f92672">*</span><span style="color:#66d9ef">this</span>)
{
  Box((Box <span style="color:#f92672">*</span>)<span style="color:#66d9ef">this</span>);
  <span style="color:#66d9ef">this</span><span style="color:#f92672">-</span><span style="color:#f92672">&gt;</span>c <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>; <span style="color:#75715e">// this was assigned in class definition, not constructor
</span><span style="color:#75715e"></span>  <span style="color:#66d9ef">this</span><span style="color:#f92672">-</span><span style="color:#f92672">&gt;</span>b <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>;
  <span style="color:#66d9ef">this</span><span style="color:#f92672">-</span><span style="color:#f92672">&gt;</span>a <span style="color:#f92672">=</span> <span style="color:#66d9ef">this</span><span style="color:#f92672">-</span><span style="color:#f92672">&gt;</span>b;
  <span style="color:#66d9ef">return</span>;
}

</code></pre></div><p>Inherited destructors contains destructors of base class:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c++" data-lang="c++"><span style="color:#66d9ef">void</span> __thiscall <span style="color:#f92672">~</span>Inherited(Inherited <span style="color:#f92672">*</span><span style="color:#66d9ef">this</span>)

{
  <span style="color:#f92672">~</span>Box((Box <span style="color:#f92672">*</span>)<span style="color:#66d9ef">this</span>);
  <span style="color:#66d9ef">return</span>;
}
</code></pre></div><h3 id="virtuals">Virtuals</h3>
<p>Generally we have the same behaviour like in inheritance, but additionally we have also vtables.</p>
<p>The structures of classess contains 1 additional field (at offset 0): <code>vptr</code> to <code>vtable</code> structure containing pointers to all virtual methods in this class:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c++" data-lang="c++"><span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">vtable_class_A</span> {
  <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span> <span style="color:#a6e22e">virtual_func_1</span>();
  <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span> <span style="color:#a6e22e">virtual_func_2</span>();
  <span style="color:#75715e">// ...
</span><span style="color:#75715e"></span>};
</code></pre></div><h2 id="references">References</h2>
<ol>
<li><a href="https://oalabs.openanalysis.net/2019/06/03/reverse-engineering-c-with-ida-pro-classes-constructors-and-structs/">OA Labs</a></li>
</ol>
]]></content>
        </item>
        
    </channel>
</rss>
